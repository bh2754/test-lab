---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app radarr
  namespace: organizers
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    controllers:
      main:
        type: deployment
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          annotations:
            setGateway: "true"
          securityContext:
            runAsUser: 568
            runAsGroup: 100   # was 568 before app template upgrade
            fsGroup: 100
            fsGroupChangePolicy: "OnRootMismatch"
        containers:
          main:
            image:
              repository: ghcr.io/bh2754/radarr-develop
              tag: 5.2.3.8303@sha256:a143ea44ce2dd787d01195c0788d7d4e2e3876f6d7f2833f50a32a700dedb4df
            env:
              SONARR__INSTANCE_NAME: Radarr
              SONARR__PORT: &port 7878
              SONARR__AUTHENTICATION_METHOD: External
              SONARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
              SONARR__APPLICATION_URL: "https://radarr.${SECRET_DOMAIN}"
              SONARR__LOG_LEVEL: info
            envFrom:
              - secretRef:
                  name: radarr-secret
            resources:
              requests:
                cpu: 20m
                memory: 323M
              limits:
                memory: 323M
          netshoot:
            image:
              repository: ghcr.io/nicolaka/netshoot
              tag: v0.11
            command: ["/bin/bash"]
            args: ["-c", "while true; do ping localhost; sleep 60;done"]

    service:
      main:
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        className: "internal"
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        hosts:
          - host: &host "radarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      config:
        enabled: true
        existingClaim: radarr-config-v1
      media:
        enabled: true
        type: nfs
        server: "${NFS_SERVER}"
        path: "${NFS_MEDIA}"
        mountPath: /media
        readOnly: false
      download:
        enabled: true
        type: nfs
        server: "${NFS_SERVER}"
        path: "${NFS_DOWNLOAD}"
        mountPath: /download
        readOnly: false
